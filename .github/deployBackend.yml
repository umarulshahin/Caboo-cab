name: Deploy Django Application

on:
  push:
    branches:
      - main
    paths:
      - 'Backend/Caboo_backend/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.18.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./Backend/Caboo_backend
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/caboo-backend:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/caboo-backend:${{ github.sha }}
    - name: Set up environment for tests
      run: |
        cd Backend/Caboo_backend
        echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" > .env
        echo "POSTGRES_DB=caboo_cab" >> .env
        echo "POSTGRES_USER=POSTGRES_USER" >> .env
        echo "POSTGRES_PASSWORD=POSTGRES_PASSWORD" >> .env
        echo "DB_HOST=db" >> .env
        echo "DB_PORT=5432" >> .env
        echo "EMAIL_HOST=EMAIL_HOST" >> .env
        echo "EMAIL_PORT=EMAIL_PORT" >> .env
        echo "EMAIL_HOST_USER=EMAIL_HOST_USER" >> .env
        echo "EMAIL_HOST_PASSWORD=EMAIL_HOST_PASSWORD" >> .env
        echo "RAZORPAY_SECRET_KEY=RAZORPAY_SECRET_KEY" >> .env
        echo "RAZORPAY_PUBLIC_KEY=RAZORPAY_PUBLIC_KEY" >> .env
        echo "SOCIAL_AUTH_GOOGLE_OAUTH2_KEY=SOCIAL_AUTH_GOOGLE_OAUTH2_KEY" >> .env
        echo "SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET=SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET" >> .env
    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_PEM_KEY }}
        script: |
          # Navigate to the project directory
          cd Caboo-cab/Backend/Caboo_backend || exit 1

          # Pull the latest code
          git pull origin main

          # Stop existing containers
          docker-compose down --remove-orphans

          # Remove old, unused images to free up space
          docker system prune -f

          # Pull the latest images
          docker-compose pull

          # Run migrations
          docker-compose run --rm web python manage.py migrate --noinput

          # Collect static files
          docker-compose run --rm web python manage.py collectstatic --noinput

          # Start all services with scaling for web service
          docker-compose up -d --scale web=3

          # Display container status
          docker-compose ps

          # Show recent logs
          docker-compose logs --tail=50 web